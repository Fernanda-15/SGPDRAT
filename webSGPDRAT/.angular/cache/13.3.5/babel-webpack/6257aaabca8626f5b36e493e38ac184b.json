{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getXMLTask = exports.getXMLProject = exports.AddXMLTask = exports.getXMLNodeValue = exports.findXMLNode = exports.parseXMLString = exports.parseXML = void 0;\n\nvar task_1 = require(\"./task\");\n\nvar date_utils_1 = require(\"./utils/date_utils\");\n\nvar draw_utils_1 = require(\"./utils/draw_utils\");\n\nvar general_utils_1 = require(\"./utils/general_utils\");\n\nexports.parseXML = function (pFile, pGanttVar) {\n  return general_utils_1.makeRequest(pFile, false, false).then(function (xmlDoc) {\n    exports.AddXMLTask(pGanttVar, xmlDoc);\n  });\n};\n\nexports.parseXMLString = function (pStr, pGanttVar) {\n  var xmlDoc;\n\n  if (typeof window.DOMParser != 'undefined') {\n    xmlDoc = new window.DOMParser().parseFromString(pStr, 'text/xml');\n  } else if (typeof window.ActiveXObject != 'undefined' && new window.ActiveXObject('Microsoft.XMLDOM')) {\n    xmlDoc = new window.ActiveXObject('Microsoft.XMLDOM');\n    xmlDoc.async = 'false';\n    xmlDoc.loadXML(pStr);\n  }\n\n  exports.AddXMLTask(pGanttVar, xmlDoc);\n};\n\nexports.findXMLNode = function (pRoot, pNodeName) {\n  var vRetValue;\n\n  try {\n    vRetValue = pRoot.getElementsByTagName(pNodeName);\n  } catch (error) {\n    ;\n  } // do nothing, we'll return undefined\n\n\n  return vRetValue;\n}; // pType can be 1=numeric, 2=String, all other values just return raw data\n\n\nexports.getXMLNodeValue = function (pRoot, pNodeName, pType, pDefault) {\n  var vRetValue;\n\n  try {\n    vRetValue = pRoot.getElementsByTagName(pNodeName)[0].childNodes[0].nodeValue;\n  } catch (error) {\n    if (typeof pDefault != 'undefined') vRetValue = pDefault;\n  }\n\n  if (typeof vRetValue != 'undefined' && vRetValue != null) {\n    if (pType == 1) vRetValue *= 1;else if (pType == 2) vRetValue = vRetValue.toString();\n  }\n\n  return vRetValue;\n};\n\nexports.AddXMLTask = function (pGanttVar, pXmlDoc) {\n  var project = '';\n  var Task;\n  var n = 0;\n  var m = 0;\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var maxPID = 0;\n  var ass = new Array();\n  var assRes = new Array();\n  var res = new Array();\n  var pars = new Array();\n  var projNode = exports.findXMLNode(pXmlDoc, 'Project');\n\n  if (typeof projNode != 'undefined' && projNode.length > 0) {\n    project = projNode[0].getAttribute('xmlns');\n  }\n\n  if (project == 'http://schemas.microsoft.com/project') {\n    pGanttVar.setDateInputFormat('yyyy-mm-dd');\n    Task = exports.findXMLNode(pXmlDoc, 'Task');\n    if (typeof Task == 'undefined') n = 0;else n = Task.length;\n    var resources = exports.findXMLNode(pXmlDoc, 'Resource');\n\n    if (typeof resources == 'undefined') {\n      n = 0;\n      m = 0;\n    } else m = resources.length;\n\n    for (i = 0; i < m; i++) {\n      var resname = exports.getXMLNodeValue(resources[i], 'Name', 2, '');\n      var uid = exports.getXMLNodeValue(resources[i], 'UID', 1, -1);\n      if (resname.length > 0 && uid > 0) res[uid] = resname;\n    }\n\n    var assignments = exports.findXMLNode(pXmlDoc, 'Assignment');\n    if (typeof assignments == 'undefined') j = 0;else j = assignments.length;\n\n    for (i = 0; i < j; i++) {\n      var uid = void 0;\n      var resUID = exports.getXMLNodeValue(assignments[i], 'ResourceUID', 1, -1);\n      uid = exports.getXMLNodeValue(assignments[i], 'TaskUID', 1, -1);\n\n      if (uid > 0) {\n        if (resUID > 0) assRes[uid] = res[resUID];\n        ass[uid] = assignments[i];\n      }\n    } // Store information about parent UIDs in an easily searchable form\n\n\n    for (i = 0; i < n; i++) {\n      var uid = void 0;\n      uid = exports.getXMLNodeValue(Task[i], 'UID', 1, 0);\n      var vOutlineNumber = void 0;\n      if (uid != 0) vOutlineNumber = exports.getXMLNodeValue(Task[i], 'OutlineNumber', 2, '0');\n      if (uid > 0) pars[vOutlineNumber] = uid;\n      if (uid > maxPID) maxPID = uid;\n    }\n\n    for (i = 0; i < n; i++) {\n      // optional parameters may not have an entry\n      // Task ID must NOT be zero otherwise it will be skipped\n      var pID = exports.getXMLNodeValue(Task[i], 'UID', 1, 0);\n\n      if (pID != 0) {\n        var pName = exports.getXMLNodeValue(Task[i], 'Name', 2, 'No Task Name');\n        var pStart = exports.getXMLNodeValue(Task[i], 'Start', 2, '');\n        var pEnd = exports.getXMLNodeValue(Task[i], 'Finish', 2, '');\n        var pPlanStart = exports.getXMLNodeValue(Task[i], 'PlanStart', 2, '');\n        var pPlanEnd = exports.getXMLNodeValue(Task[i], 'PlanFinish', 2, '');\n        var pDuration = exports.getXMLNodeValue(Task[i], 'Duration', 2, '');\n        var pLink = exports.getXMLNodeValue(Task[i], 'HyperlinkAddress', 2, '');\n        var pMile = exports.getXMLNodeValue(Task[i], 'Milestone', 1, 0);\n        var pComp = exports.getXMLNodeValue(Task[i], 'PercentWorkComplete', 1, 0);\n        var pCost = exports.getXMLNodeValue(Task[i], 'Cost', 2, 0);\n        var pGroup = exports.getXMLNodeValue(Task[i], 'Summary', 1, 0);\n        var pParent = 0;\n        var vOutlineLevel = exports.getXMLNodeValue(Task[i], 'OutlineLevel', 1, 0);\n        var vOutlineNumber = void 0;\n\n        if (vOutlineLevel > 1) {\n          vOutlineNumber = exports.getXMLNodeValue(Task[i], 'OutlineNumber', 2, '0');\n          pParent = pars[vOutlineNumber.substr(0, vOutlineNumber.lastIndexOf('.'))];\n        }\n\n        var pNotes = void 0;\n\n        try {\n          pNotes = Task[i].getElementsByTagName('Notes')[0].childNodes[1].nodeValue; //this should be a CDATA node\n        } catch (error) {\n          pNotes = '';\n        }\n\n        var pRes = void 0;\n        if (typeof assRes[pID] != 'undefined') pRes = assRes[pID];else pRes = '';\n        var predecessors = exports.findXMLNode(Task[i], 'PredecessorLink');\n        if (typeof predecessors == 'undefined') j = 0;else j = predecessors.length;\n        var pDepend = '';\n\n        for (k = 0; k < j; k++) {\n          var depUID = exports.getXMLNodeValue(predecessors[k], 'PredecessorUID', 1, -1);\n          var depType = exports.getXMLNodeValue(predecessors[k], 'Type', 1, 1);\n\n          if (depUID > 0) {\n            if (pDepend.length > 0) pDepend += ',';\n\n            switch (depType) {\n              case 0:\n                pDepend += depUID + 'FF';\n                break;\n\n              case 1:\n                pDepend += depUID + 'FS';\n                break;\n\n              case 2:\n                pDepend += depUID + 'SF';\n                break;\n\n              case 3:\n                pDepend += depUID + 'SS';\n                break;\n\n              default:\n                pDepend += depUID + 'FS';\n                break;\n            }\n          }\n        }\n\n        var pOpen = 1;\n        var pCaption = '';\n        var pClass = void 0;\n        if (pGroup > 0) pClass = 'ggroupblack';else if (pMile > 0) pClass = 'gmilestone';else pClass = 'gtaskblue'; // check for split tasks\n\n        var splits = exports.findXMLNode(ass[pID], 'TimephasedData');\n        if (typeof splits == 'undefined') j = 0;else j = splits.length;\n        var vSplitStart = pStart;\n        var vSplitEnd = pEnd;\n        var vSubCreated = false;\n        var vDepend = pDepend.replace(/,*[0-9]+[FS]F/g, '');\n\n        for (k = 0; k < j; k++) {\n          var vDuration = exports.getXMLNodeValue(splits[k], 'Value', 2, '0'); //remove all text\n\n          vDuration = '0' + vDuration.replace(/\\D/g, '');\n          vDuration *= 1;\n\n          if (vDuration == 0 && !vSubCreated || k + 1 == j && pGroup == 2) {\n            // No time booked in the given period (or last entry)\n            // Make sure the parent task is set as a combined group\n            pGroup = 2; // Handle last loop\n\n            if (k + 1 == j) vDepend = pDepend.replace(/,*[0-9]+[FS]S/g, ''); // Now create a subtask\n\n            maxPID++;\n            vSplitEnd = exports.getXMLNodeValue(splits[k], k + 1 == j ? 'Finish' : 'Start', 2, '');\n            pGanttVar.AddTaskItem(new task_1.TaskItem(maxPID, pName, vSplitStart, vSplitEnd, 'gtaskblue', pLink, pMile, pRes, pComp, 0, pID, pOpen, vDepend, pCaption, pNotes, pGanttVar, pCost, pPlanStart, pPlanEnd, pDuration));\n            vSubCreated = true;\n            vDepend = '';\n          } else if (vDuration != 0 && vSubCreated) {\n            vSplitStart = exports.getXMLNodeValue(splits[k], 'Start', 2, '');\n            vSubCreated = false;\n          }\n        }\n\n        if (vSubCreated) pDepend = ''; // Finally add the task\n\n        pGanttVar.AddTaskItem(new task_1.TaskItem(pID, pName, pStart, pEnd, pClass, pLink, pMile, pRes, pComp, pGroup, pParent, pOpen, pDepend, pCaption, pNotes, pGanttVar, pCost, pPlanStart, pPlanEnd, pDuration, undefined, undefined, pClass));\n      }\n    }\n  } else {\n    Task = pXmlDoc.getElementsByTagName('task');\n    n = Task.length;\n\n    for (i = 0; i < n; i++) {\n      // optional parameters may not have an entry\n      // Task ID must NOT be zero otherwise it will be skipped\n      var pID = exports.getXMLNodeValue(Task[i], 'pID', 1, 0);\n\n      if (pID != 0) {\n        var pName = exports.getXMLNodeValue(Task[i], 'pName', 2, 'No Task Name');\n        var pStart = exports.getXMLNodeValue(Task[i], 'pStart', 2, '');\n        var pEnd = exports.getXMLNodeValue(Task[i], 'pEnd', 2, '');\n        var pPlanStart = exports.getXMLNodeValue(Task[i], 'pPlanStart', 2, '');\n        var pPlanEnd = exports.getXMLNodeValue(Task[i], 'pPlanEnd', 2, '');\n        var pDuration = exports.getXMLNodeValue(Task[i], 'pDuration', 2, '');\n        var pLink = exports.getXMLNodeValue(Task[i], 'pLink', 2, '');\n        var pMile = exports.getXMLNodeValue(Task[i], 'pMile', 1, 0);\n        var pComp = exports.getXMLNodeValue(Task[i], 'pComp', 1, 0);\n        var pCost = exports.getXMLNodeValue(Task[i], 'pCost', 2, 0);\n        var pGroup = exports.getXMLNodeValue(Task[i], 'pGroup', 1, 0);\n        var pParent = exports.getXMLNodeValue(Task[i], 'pParent', 1, 0);\n        var pRes = exports.getXMLNodeValue(Task[i], 'pRes', 2, '');\n        var pOpen = exports.getXMLNodeValue(Task[i], 'pOpen', 1, 1);\n        var pDepend = exports.getXMLNodeValue(Task[i], 'pDepend', 2, '');\n        var pCaption = exports.getXMLNodeValue(Task[i], 'pCaption', 2, '');\n        var pNotes = exports.getXMLNodeValue(Task[i], 'pNotes', 2, '');\n        var pClass = exports.getXMLNodeValue(Task[i], 'pClass', 2, '');\n        var pPlanClass = exports.getXMLNodeValue(Task[i], 'pPlanClass', 2, '');\n\n        if (typeof pClass == 'undefined') {\n          if (pGroup > 0) pClass = 'ggroupblack';else if (pMile > 0) pClass = 'gmilestone';else pClass = 'gtaskblue';\n        }\n\n        if (typeof pPlanClass == 'undefined') pPlanClass = pClass; // Finally add the task\n\n        pGanttVar.AddTaskItem(new task_1.TaskItem(pID, pName, pStart, pEnd, pClass, pLink, pMile, pRes, pComp, pGroup, pParent, pOpen, pDepend, pCaption, pNotes, pGanttVar, pCost, pPlanStart, pPlanEnd, pDuration, undefined, undefined, pPlanClass));\n      }\n    }\n  }\n};\n\nexports.getXMLProject = function () {\n  var vProject = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">';\n\n  for (var i = 0; i < this.vTaskList.length; i++) {\n    vProject += this.getXMLTask(i, true);\n  }\n\n  vProject += '</project>';\n  return vProject;\n};\n\nexports.getXMLTask = function (pID, pIdx) {\n  var i = 0;\n  var vIdx = -1;\n  var vTask = '';\n  var vOutFrmt = date_utils_1.parseDateFormatStr(this.getDateInputFormat() + ' HH:MI:SS');\n  if (pIdx === true) vIdx = pID;else {\n    for (i = 0; i < this.vTaskList.length; i++) {\n      if (this.vTaskList[i].getID() == pID) {\n        vIdx = i;\n        break;\n      }\n    }\n  }\n\n  if (vIdx >= 0 && vIdx < this.vTaskList.length) {\n    /* Simplest way to return case sensitive node names is to just build a string */\n    vTask = '<task>';\n    vTask += '<pID>' + this.vTaskList[vIdx].getID() + '</pID>';\n    vTask += '<pName>' + this.vTaskList[vIdx].getName() + '</pName>';\n    vTask += '<pStart>' + date_utils_1.formatDateStr(this.vTaskList[vIdx].getStart(), vOutFrmt, this.vLangs[this.vLang]) + '</pStart>';\n    vTask += '<pEnd>' + date_utils_1.formatDateStr(this.vTaskList[vIdx].getEnd(), vOutFrmt, this.vLangs[this.vLang]) + '</pEnd>';\n    vTask += '<pPlanStart>' + date_utils_1.formatDateStr(this.vTaskList[vIdx].getPlanStart(), vOutFrmt, this.vLangs[this.vLang]) + '</pPlanStart>';\n    vTask += '<pPlanEnd>' + date_utils_1.formatDateStr(this.vTaskList[vIdx].getPlanEnd(), vOutFrmt, this.vLangs[this.vLang]) + '</pPlanEnd>';\n    vTask += '<pDuration>' + this.vTaskList[vIdx].getDuration() + '</pDuration>';\n    vTask += '<pClass>' + this.vTaskList[vIdx].getClass() + '</pClass>';\n    vTask += '<pLink>' + this.vTaskList[vIdx].getLink() + '</pLink>';\n    vTask += '<pMile>' + this.vTaskList[vIdx].getMile() + '</pMile>';\n    if (this.vTaskList[vIdx].getResource() != '\\u00A0') vTask += '<pRes>' + this.vTaskList[vIdx].getResource() + '</pRes>';\n    vTask += '<pComp>' + this.vTaskList[vIdx].getCompVal() + '</pComp>';\n    vTask += '<pCost>' + this.vTaskList[vIdx].getCost() + '</pCost>';\n    vTask += '<pGroup>' + this.vTaskList[vIdx].getGroup() + '</pGroup>';\n    vTask += '<pParent>' + this.vTaskList[vIdx].getParent() + '</pParent>';\n    vTask += '<pOpen>' + this.vTaskList[vIdx].getOpen() + '</pOpen>';\n    vTask += '<pDepend>';\n    var vDepList = this.vTaskList[vIdx].getDepend();\n\n    for (i = 0; i < vDepList.length; i++) {\n      if (i > 0) vTask += ',';\n      if (vDepList[i] > 0) vTask += vDepList[i] + this.vTaskList[vIdx].getDepType()[i];\n    }\n\n    vTask += '</pDepend>';\n    vTask += '<pCaption>' + this.vTaskList[vIdx].getCaption() + '</pCaption>';\n    var vTmpFrag = document.createDocumentFragment();\n    var vTmpDiv = draw_utils_1.newNode(vTmpFrag, 'div', null, null, this.vTaskList[vIdx].getNotes().innerHTML);\n    vTask += '<pNotes>' + vTmpDiv.innerHTML + '</pNotes>';\n    vTask += '<pPlanClass>' + this.vTaskList[vIdx].getPlanClass() + '</pPlanClass>';\n    vTask += '</task>';\n  }\n\n  return vTask;\n};","map":{"version":3,"sources":["/Users/allanhanseygonzalezgonzalez/Documents/SENARA/SGPDRAT-GIT/SGPDRAT/webSGPDRAT/node_modules/jsgantt-improved/dist/src/xml.js"],"names":["Object","defineProperty","exports","value","getXMLTask","getXMLProject","AddXMLTask","getXMLNodeValue","findXMLNode","parseXMLString","parseXML","task_1","require","date_utils_1","draw_utils_1","general_utils_1","pFile","pGanttVar","makeRequest","then","xmlDoc","pStr","window","DOMParser","parseFromString","ActiveXObject","async","loadXML","pRoot","pNodeName","vRetValue","getElementsByTagName","error","pType","pDefault","childNodes","nodeValue","toString","pXmlDoc","project","Task","n","m","i","j","k","maxPID","ass","Array","assRes","res","pars","projNode","length","getAttribute","setDateInputFormat","resources","resname","uid","assignments","resUID","vOutlineNumber","pID","pName","pStart","pEnd","pPlanStart","pPlanEnd","pDuration","pLink","pMile","pComp","pCost","pGroup","pParent","vOutlineLevel","substr","lastIndexOf","pNotes","pRes","predecessors","pDepend","depUID","depType","pOpen","pCaption","pClass","splits","vSplitStart","vSplitEnd","vSubCreated","vDepend","replace","vDuration","AddTaskItem","TaskItem","undefined","pPlanClass","vProject","vTaskList","pIdx","vIdx","vTask","vOutFrmt","parseDateFormatStr","getDateInputFormat","getID","getName","formatDateStr","getStart","vLangs","vLang","getEnd","getPlanStart","getPlanEnd","getDuration","getClass","getLink","getMile","getResource","getCompVal","getCost","getGroup","getParent","getOpen","vDepList","getDepend","getDepType","getCaption","vTmpFrag","document","createDocumentFragment","vTmpDiv","newNode","getNotes","innerHTML","getPlanClass"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getXMLTask = exports.getXMLProject = exports.AddXMLTask = exports.getXMLNodeValue = exports.findXMLNode = exports.parseXMLString = exports.parseXML = void 0;\nvar task_1 = require(\"./task\");\nvar date_utils_1 = require(\"./utils/date_utils\");\nvar draw_utils_1 = require(\"./utils/draw_utils\");\nvar general_utils_1 = require(\"./utils/general_utils\");\nexports.parseXML = function (pFile, pGanttVar) {\n    return general_utils_1.makeRequest(pFile, false, false)\n        .then(function (xmlDoc) {\n        exports.AddXMLTask(pGanttVar, xmlDoc);\n    });\n};\nexports.parseXMLString = function (pStr, pGanttVar) {\n    var xmlDoc;\n    if (typeof window.DOMParser != 'undefined') {\n        xmlDoc = (new window.DOMParser()).parseFromString(pStr, 'text/xml');\n    }\n    else if (typeof window.ActiveXObject != 'undefined' &&\n        new window.ActiveXObject('Microsoft.XMLDOM')) {\n        xmlDoc = new window.ActiveXObject('Microsoft.XMLDOM');\n        xmlDoc.async = 'false';\n        xmlDoc.loadXML(pStr);\n    }\n    exports.AddXMLTask(pGanttVar, xmlDoc);\n};\nexports.findXMLNode = function (pRoot, pNodeName) {\n    var vRetValue;\n    try {\n        vRetValue = pRoot.getElementsByTagName(pNodeName);\n    }\n    catch (error) {\n        ;\n    } // do nothing, we'll return undefined\n    return vRetValue;\n};\n// pType can be 1=numeric, 2=String, all other values just return raw data\nexports.getXMLNodeValue = function (pRoot, pNodeName, pType, pDefault) {\n    var vRetValue;\n    try {\n        vRetValue = pRoot.getElementsByTagName(pNodeName)[0].childNodes[0].nodeValue;\n    }\n    catch (error) {\n        if (typeof pDefault != 'undefined')\n            vRetValue = pDefault;\n    }\n    if (typeof vRetValue != 'undefined' && vRetValue != null) {\n        if (pType == 1)\n            vRetValue *= 1;\n        else if (pType == 2)\n            vRetValue = vRetValue.toString();\n    }\n    return vRetValue;\n};\nexports.AddXMLTask = function (pGanttVar, pXmlDoc) {\n    var project = '';\n    var Task;\n    var n = 0;\n    var m = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var maxPID = 0;\n    var ass = new Array();\n    var assRes = new Array();\n    var res = new Array();\n    var pars = new Array();\n    var projNode = exports.findXMLNode(pXmlDoc, 'Project');\n    if (typeof projNode != 'undefined' && projNode.length > 0) {\n        project = projNode[0].getAttribute('xmlns');\n    }\n    if (project == 'http://schemas.microsoft.com/project') {\n        pGanttVar.setDateInputFormat('yyyy-mm-dd');\n        Task = exports.findXMLNode(pXmlDoc, 'Task');\n        if (typeof Task == 'undefined')\n            n = 0;\n        else\n            n = Task.length;\n        var resources = exports.findXMLNode(pXmlDoc, 'Resource');\n        if (typeof resources == 'undefined') {\n            n = 0;\n            m = 0;\n        }\n        else\n            m = resources.length;\n        for (i = 0; i < m; i++) {\n            var resname = exports.getXMLNodeValue(resources[i], 'Name', 2, '');\n            var uid = exports.getXMLNodeValue(resources[i], 'UID', 1, -1);\n            if (resname.length > 0 && uid > 0)\n                res[uid] = resname;\n        }\n        var assignments = exports.findXMLNode(pXmlDoc, 'Assignment');\n        if (typeof assignments == 'undefined')\n            j = 0;\n        else\n            j = assignments.length;\n        for (i = 0; i < j; i++) {\n            var uid = void 0;\n            var resUID = exports.getXMLNodeValue(assignments[i], 'ResourceUID', 1, -1);\n            uid = exports.getXMLNodeValue(assignments[i], 'TaskUID', 1, -1);\n            if (uid > 0) {\n                if (resUID > 0)\n                    assRes[uid] = res[resUID];\n                ass[uid] = assignments[i];\n            }\n        }\n        // Store information about parent UIDs in an easily searchable form\n        for (i = 0; i < n; i++) {\n            var uid = void 0;\n            uid = exports.getXMLNodeValue(Task[i], 'UID', 1, 0);\n            var vOutlineNumber = void 0;\n            if (uid != 0)\n                vOutlineNumber = exports.getXMLNodeValue(Task[i], 'OutlineNumber', 2, '0');\n            if (uid > 0)\n                pars[vOutlineNumber] = uid;\n            if (uid > maxPID)\n                maxPID = uid;\n        }\n        for (i = 0; i < n; i++) {\n            // optional parameters may not have an entry\n            // Task ID must NOT be zero otherwise it will be skipped\n            var pID = exports.getXMLNodeValue(Task[i], 'UID', 1, 0);\n            if (pID != 0) {\n                var pName = exports.getXMLNodeValue(Task[i], 'Name', 2, 'No Task Name');\n                var pStart = exports.getXMLNodeValue(Task[i], 'Start', 2, '');\n                var pEnd = exports.getXMLNodeValue(Task[i], 'Finish', 2, '');\n                var pPlanStart = exports.getXMLNodeValue(Task[i], 'PlanStart', 2, '');\n                var pPlanEnd = exports.getXMLNodeValue(Task[i], 'PlanFinish', 2, '');\n                var pDuration = exports.getXMLNodeValue(Task[i], 'Duration', 2, '');\n                var pLink = exports.getXMLNodeValue(Task[i], 'HyperlinkAddress', 2, '');\n                var pMile = exports.getXMLNodeValue(Task[i], 'Milestone', 1, 0);\n                var pComp = exports.getXMLNodeValue(Task[i], 'PercentWorkComplete', 1, 0);\n                var pCost = exports.getXMLNodeValue(Task[i], 'Cost', 2, 0);\n                var pGroup = exports.getXMLNodeValue(Task[i], 'Summary', 1, 0);\n                var pParent = 0;\n                var vOutlineLevel = exports.getXMLNodeValue(Task[i], 'OutlineLevel', 1, 0);\n                var vOutlineNumber = void 0;\n                if (vOutlineLevel > 1) {\n                    vOutlineNumber = exports.getXMLNodeValue(Task[i], 'OutlineNumber', 2, '0');\n                    pParent = pars[vOutlineNumber.substr(0, vOutlineNumber.lastIndexOf('.'))];\n                }\n                var pNotes = void 0;\n                try {\n                    pNotes = Task[i].getElementsByTagName('Notes')[0].childNodes[1].nodeValue; //this should be a CDATA node\n                }\n                catch (error) {\n                    pNotes = '';\n                }\n                var pRes = void 0;\n                if (typeof assRes[pID] != 'undefined')\n                    pRes = assRes[pID];\n                else\n                    pRes = '';\n                var predecessors = exports.findXMLNode(Task[i], 'PredecessorLink');\n                if (typeof predecessors == 'undefined')\n                    j = 0;\n                else\n                    j = predecessors.length;\n                var pDepend = '';\n                for (k = 0; k < j; k++) {\n                    var depUID = exports.getXMLNodeValue(predecessors[k], 'PredecessorUID', 1, -1);\n                    var depType = exports.getXMLNodeValue(predecessors[k], 'Type', 1, 1);\n                    if (depUID > 0) {\n                        if (pDepend.length > 0)\n                            pDepend += ',';\n                        switch (depType) {\n                            case 0:\n                                pDepend += depUID + 'FF';\n                                break;\n                            case 1:\n                                pDepend += depUID + 'FS';\n                                break;\n                            case 2:\n                                pDepend += depUID + 'SF';\n                                break;\n                            case 3:\n                                pDepend += depUID + 'SS';\n                                break;\n                            default:\n                                pDepend += depUID + 'FS';\n                                break;\n                        }\n                    }\n                }\n                var pOpen = 1;\n                var pCaption = '';\n                var pClass = void 0;\n                if (pGroup > 0)\n                    pClass = 'ggroupblack';\n                else if (pMile > 0)\n                    pClass = 'gmilestone';\n                else\n                    pClass = 'gtaskblue';\n                // check for split tasks\n                var splits = exports.findXMLNode(ass[pID], 'TimephasedData');\n                if (typeof splits == 'undefined')\n                    j = 0;\n                else\n                    j = splits.length;\n                var vSplitStart = pStart;\n                var vSplitEnd = pEnd;\n                var vSubCreated = false;\n                var vDepend = pDepend.replace(/,*[0-9]+[FS]F/g, '');\n                for (k = 0; k < j; k++) {\n                    var vDuration = exports.getXMLNodeValue(splits[k], 'Value', 2, '0');\n                    //remove all text\n                    vDuration = '0' + vDuration.replace(/\\D/g, '');\n                    vDuration *= 1;\n                    if ((vDuration == 0 && !vSubCreated) || (k + 1 == j && pGroup == 2)) {\n                        // No time booked in the given period (or last entry)\n                        // Make sure the parent task is set as a combined group\n                        pGroup = 2;\n                        // Handle last loop\n                        if (k + 1 == j)\n                            vDepend = pDepend.replace(/,*[0-9]+[FS]S/g, '');\n                        // Now create a subtask\n                        maxPID++;\n                        vSplitEnd = exports.getXMLNodeValue(splits[k], (k + 1 == j) ? 'Finish' : 'Start', 2, '');\n                        pGanttVar.AddTaskItem(new task_1.TaskItem(maxPID, pName, vSplitStart, vSplitEnd, 'gtaskblue', pLink, pMile, pRes, pComp, 0, pID, pOpen, vDepend, pCaption, pNotes, pGanttVar, pCost, pPlanStart, pPlanEnd, pDuration));\n                        vSubCreated = true;\n                        vDepend = '';\n                    }\n                    else if (vDuration != 0 && vSubCreated) {\n                        vSplitStart = exports.getXMLNodeValue(splits[k], 'Start', 2, '');\n                        vSubCreated = false;\n                    }\n                }\n                if (vSubCreated)\n                    pDepend = '';\n                // Finally add the task\n                pGanttVar.AddTaskItem(new task_1.TaskItem(pID, pName, pStart, pEnd, pClass, pLink, pMile, pRes, pComp, pGroup, pParent, pOpen, pDepend, pCaption, pNotes, pGanttVar, pCost, pPlanStart, pPlanEnd, pDuration, undefined, undefined, pClass));\n            }\n        }\n    }\n    else {\n        Task = pXmlDoc.getElementsByTagName('task');\n        n = Task.length;\n        for (i = 0; i < n; i++) {\n            // optional parameters may not have an entry\n            // Task ID must NOT be zero otherwise it will be skipped\n            var pID = exports.getXMLNodeValue(Task[i], 'pID', 1, 0);\n            if (pID != 0) {\n                var pName = exports.getXMLNodeValue(Task[i], 'pName', 2, 'No Task Name');\n                var pStart = exports.getXMLNodeValue(Task[i], 'pStart', 2, '');\n                var pEnd = exports.getXMLNodeValue(Task[i], 'pEnd', 2, '');\n                var pPlanStart = exports.getXMLNodeValue(Task[i], 'pPlanStart', 2, '');\n                var pPlanEnd = exports.getXMLNodeValue(Task[i], 'pPlanEnd', 2, '');\n                var pDuration = exports.getXMLNodeValue(Task[i], 'pDuration', 2, '');\n                var pLink = exports.getXMLNodeValue(Task[i], 'pLink', 2, '');\n                var pMile = exports.getXMLNodeValue(Task[i], 'pMile', 1, 0);\n                var pComp = exports.getXMLNodeValue(Task[i], 'pComp', 1, 0);\n                var pCost = exports.getXMLNodeValue(Task[i], 'pCost', 2, 0);\n                var pGroup = exports.getXMLNodeValue(Task[i], 'pGroup', 1, 0);\n                var pParent = exports.getXMLNodeValue(Task[i], 'pParent', 1, 0);\n                var pRes = exports.getXMLNodeValue(Task[i], 'pRes', 2, '');\n                var pOpen = exports.getXMLNodeValue(Task[i], 'pOpen', 1, 1);\n                var pDepend = exports.getXMLNodeValue(Task[i], 'pDepend', 2, '');\n                var pCaption = exports.getXMLNodeValue(Task[i], 'pCaption', 2, '');\n                var pNotes = exports.getXMLNodeValue(Task[i], 'pNotes', 2, '');\n                var pClass = exports.getXMLNodeValue(Task[i], 'pClass', 2, '');\n                var pPlanClass = exports.getXMLNodeValue(Task[i], 'pPlanClass', 2, '');\n                if (typeof pClass == 'undefined') {\n                    if (pGroup > 0)\n                        pClass = 'ggroupblack';\n                    else if (pMile > 0)\n                        pClass = 'gmilestone';\n                    else\n                        pClass = 'gtaskblue';\n                }\n                if (typeof pPlanClass == 'undefined')\n                    pPlanClass = pClass;\n                // Finally add the task\n                pGanttVar.AddTaskItem(new task_1.TaskItem(pID, pName, pStart, pEnd, pClass, pLink, pMile, pRes, pComp, pGroup, pParent, pOpen, pDepend, pCaption, pNotes, pGanttVar, pCost, pPlanStart, pPlanEnd, pDuration, undefined, undefined, pPlanClass));\n            }\n        }\n    }\n};\nexports.getXMLProject = function () {\n    var vProject = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">';\n    for (var i = 0; i < this.vTaskList.length; i++) {\n        vProject += this.getXMLTask(i, true);\n    }\n    vProject += '</project>';\n    return vProject;\n};\nexports.getXMLTask = function (pID, pIdx) {\n    var i = 0;\n    var vIdx = -1;\n    var vTask = '';\n    var vOutFrmt = date_utils_1.parseDateFormatStr(this.getDateInputFormat() + ' HH:MI:SS');\n    if (pIdx === true)\n        vIdx = pID;\n    else {\n        for (i = 0; i < this.vTaskList.length; i++) {\n            if (this.vTaskList[i].getID() == pID) {\n                vIdx = i;\n                break;\n            }\n        }\n    }\n    if (vIdx >= 0 && vIdx < this.vTaskList.length) {\n        /* Simplest way to return case sensitive node names is to just build a string */\n        vTask = '<task>';\n        vTask += '<pID>' + this.vTaskList[vIdx].getID() + '</pID>';\n        vTask += '<pName>' + this.vTaskList[vIdx].getName() + '</pName>';\n        vTask += '<pStart>' + date_utils_1.formatDateStr(this.vTaskList[vIdx].getStart(), vOutFrmt, this.vLangs[this.vLang]) + '</pStart>';\n        vTask += '<pEnd>' + date_utils_1.formatDateStr(this.vTaskList[vIdx].getEnd(), vOutFrmt, this.vLangs[this.vLang]) + '</pEnd>';\n        vTask += '<pPlanStart>' + date_utils_1.formatDateStr(this.vTaskList[vIdx].getPlanStart(), vOutFrmt, this.vLangs[this.vLang]) + '</pPlanStart>';\n        vTask += '<pPlanEnd>' + date_utils_1.formatDateStr(this.vTaskList[vIdx].getPlanEnd(), vOutFrmt, this.vLangs[this.vLang]) + '</pPlanEnd>';\n        vTask += '<pDuration>' + this.vTaskList[vIdx].getDuration() + '</pDuration>';\n        vTask += '<pClass>' + this.vTaskList[vIdx].getClass() + '</pClass>';\n        vTask += '<pLink>' + this.vTaskList[vIdx].getLink() + '</pLink>';\n        vTask += '<pMile>' + this.vTaskList[vIdx].getMile() + '</pMile>';\n        if (this.vTaskList[vIdx].getResource() != '\\u00A0')\n            vTask += '<pRes>' + this.vTaskList[vIdx].getResource() + '</pRes>';\n        vTask += '<pComp>' + this.vTaskList[vIdx].getCompVal() + '</pComp>';\n        vTask += '<pCost>' + this.vTaskList[vIdx].getCost() + '</pCost>';\n        vTask += '<pGroup>' + this.vTaskList[vIdx].getGroup() + '</pGroup>';\n        vTask += '<pParent>' + this.vTaskList[vIdx].getParent() + '</pParent>';\n        vTask += '<pOpen>' + this.vTaskList[vIdx].getOpen() + '</pOpen>';\n        vTask += '<pDepend>';\n        var vDepList = this.vTaskList[vIdx].getDepend();\n        for (i = 0; i < vDepList.length; i++) {\n            if (i > 0)\n                vTask += ',';\n            if (vDepList[i] > 0)\n                vTask += vDepList[i] + this.vTaskList[vIdx].getDepType()[i];\n        }\n        vTask += '</pDepend>';\n        vTask += '<pCaption>' + this.vTaskList[vIdx].getCaption() + '</pCaption>';\n        var vTmpFrag = document.createDocumentFragment();\n        var vTmpDiv = draw_utils_1.newNode(vTmpFrag, 'div', null, null, this.vTaskList[vIdx].getNotes().innerHTML);\n        vTask += '<pNotes>' + vTmpDiv.innerHTML + '</pNotes>';\n        vTask += '<pPlanClass>' + this.vTaskList[vIdx].getPlanClass() + '</pPlanClass>';\n        vTask += '</task>';\n    }\n    return vTask;\n};\n"]},"metadata":{},"sourceType":"script"}